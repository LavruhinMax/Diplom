@page "/disp"
@inject Dispatcher_VM ViewModel

<link href="css/disp.css" rel="stylesheet" />
<PageTitle>Главная</PageTitle>

<Header NavItems="ViewModel.NavItems"/>
<div class="main">
    <div class="head">
        <p>Здравствуйте, Арсений</p>
        <div class="button-row">
            <div class="click-left" @onclick="OpenNewCon">
                <img src="images/connection.png" />
                <p>Заявка на новое подключение</p>
            </div>
            <div class="click-right" @onclick="OpenNewTrouble">
                <img src="images/new-problem.png" />
                <p>Заявка на устранение неполадок</p>
            </div>
        </div>
    </div>
    <div class="bottom">
        <div class="filter-row">
            <Day date="ViewModel.date" Lite=true AddDay="ViewModel.AddDay" RemoveDay="ViewModel.RemoveDay" />
            <select>
                <option value="LS">Поиск по номеру лицевого счета</option>
                <option value="FIO">Поиск по ФИО</option>
                <option value="Address">Поиск по адресу</option>
            </select>
            <input placeholder="Поиск" />
        </div>
        <div class="list">
            @if (!ViewModel.filteredRequests.Any())
            {
                <div class="empty">
                    <img src="images/no results.png" />
                    <p>Список пуст</p>
                </div>
            }
            else
            {
                <div class="list-head-row">
                    <p>Л/С</p>
                    <p>ФИО</p>
                    <p>Адрес</p>
                    <p>Телефон</p>
                    <p>Тип</p>
                    <p>Запланировано</p>
                    <div class="filler"></div>
                </div>
            }
            @foreach (var r in ViewModel.filteredRequests)
            {
                @if (ViewModel.abonentsDict.TryGetValue(r.AbonentID, out var a))
                {
                    <div class="list-row">
                        <p>№ @a.PA</p>
                        <p>@a.LastName @a.FirstName[0].@a.MiddleName[0].</p>
                        <p>@a.City, @a.Street @a.House</p>
                        <p>@a.PhoneNumber</p>
                        <p>@r.Type</p>
                        <p>@r.Scheduled.ToString("dd.MM.yy HH:mm")</p>
                        <img src="images/delete.png" />
                    </div>
                }
            }
            @foreach (var r in ViewModel.filteredRequests)
            {
                @if (ViewModel.abonentsDict.TryGetValue(r.AbonentID, out var a))
                {
                    <div class="list-card">
                        <div class="vertical-head">
                            <p>Л/С</p>
                            <p>ФИО</p>
                            <p>Адрес</p>
                            <p>Телефон</p>
                            <p>Тип</p>
                            <p>Запланировано</p>
                        </div>
                        <div class="vertical-row">
                            <p>№ @a.PA</p>
                            <p>@a.LastName @a.FirstName[0].@a.MiddleName[0].</p>
                            <p>@a.City, @a.Street @a.House</p>
                            <p>@a.PhoneNumber</p>
                            <p>@r.Type</p>
                            <p>@r.Scheduled.ToString("dd.MM.yy HH:mm")</p>
                            <img src="images/delete.png" />
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>
<Footer />

@code {

    protected override async Task OnInitializedAsync()
    {
        await ViewModel.InitializeAsync();
    }

    private void OpenNewCon() => NavManager.NavigateTo("cr", forceLoad: true);
    private void OpenNewTrouble() => NavManager.NavigateTo("tr", forceLoad: true);
}