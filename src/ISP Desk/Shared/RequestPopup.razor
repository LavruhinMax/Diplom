<style>
	.request-popup {
		position: fixed;
		display: flex;
		flex-direction: column;
		align-items: flex-start;
		top: 30%;
		bottom: 30%;
		left: 35%;
		right: 35%;
		background-color: white;
		box-shadow: 0 0 8px rgba(0, 0, 0, 0.5);
		box-sizing: border-box;
		border-radius: 5px;
		padding: 0 20px;
		overflow-x: hidden;
		overflow-y: auto;
		z-index: 100
	}

		.request-popup p {
			margin: 0;
			font-size: 16px;
			line-height: 24px
		}

		.request-popup h3 {
			padding: 10px 0;
			margin: 0
		}

		.request-popup h2, .request-popup h4 {
			margin: 0
		}

	.request-button-row {
		display: flex;
		width: 100%;
		column-gap: 30px;
		margin: 20px 0;
		width: 100%;
	}

		.request-button-row .request-start, .request-button-row .request-delay {
			padding: 10px 30px;
			border-radius: 5px;
			font-size: 16px;
			transition: 0.1s;
			cursor: pointer;
			color: white
		}

		.request-button-row .request-start {
			background-color: green;
			border: 1px solid green
		}

			.request-button-row .request-start:hover {
				background-color: olive;
				border: 1px solid olive
			}

		.request-button-row .request-delay {
			background-color: red;
			border: 1px solid red
		}

			.request-button-row .request-delay:hover {
				background-color: firebrick;
				border: 1px solid firebrick
			}

	.request-horizontal {
		position: relative;
		display: flex;
		width: 100%;
		align-items: center;
		column-gap: 20px;
		margin: 10px 0;
		width: 100%
	}

		.request-horizontal img {
			width: 32px;
			height: 32px
		}

	.request-description, .request-commentary {
		display: flex;
		width: 100%;
		flex-direction: column;
		box-sizing: border-box;
		margin: 10px 0;
		padding: 20px;
		row-gap: 20px
	}

	.request-description {
		background-color: lavender;
		border-radius: 10px
	}

	.request-commentary {
		border: 1px solid black;
		border-radius: 10px
	}

	.request-close {
		position: absolute;
		right: 10px;
		cursor: pointer
	}

	@@media(max-width: 1920px) {
		.request-popup {
			top: 20%;
			bottom: 20%;
			left: 25%;
			right: 25%;
			padding: 0 15px
		}

			.request-popup p {
				font-size: 14px;
				line-height: 18px
			}

		.request-button-row {
			column-gap: 20px;
			margin: 10px 0;
		}

			.request-button-row .request-start, .request-button-row .request-delay {
				padding: 10px 20px;
				font-size: 14px
			}

		.request-horizontal {
			column-gap: 10px;
			margin: 10px 0;
		}

			.request-horizontal img {
				width: 24px;
				height: 24px
			}

		.request-description, .request-commentary {
			margin: 10px 0;
			padding: 15px;
			row-gap: 15px
		}
	}

	@@media(max-width: 768px) {
		.request-popup {
			left: 5%;
			right: 5%;
			padding: 0 7px
		}

			.request-popup p {
				font-size: 12px;
				line-height: 18px
			}

		.request-button-row {
			column-gap: 20px;
			margin: 15px 0
		}

			.request-button-row .request-start, .request-button-row .request-delay {
				padding: 7px 20px;
				font-size: 12px
			}

		.request-horizontal {
			column-gap: 15px;
			margin: 7px 0
		}

			.request-horizontal img {
				width: 24px;
				height: 24px
			}

		.request-description, .request-commentary {
			margin: 7px 0;
			padding: 10px;
			row-gap: 10px
		}
	}
</style>

<div class="request-popup" style="display: @(isVisible ? "flex" : "none")">
	<div class="request-horizontal">
		<h2>Заявка №@r.RequestID</h2>
		<img class="request-close" src="images/close.png" @onclick="Close" />
	</div>
	<div class="request-button-row">
		<button class="request-start">Начать</button>
		<button class="request-delay">Отложить</button>
	</div>
	<h3>@a.City, @a.Street @a.House</h3>
	<h3>@r.Scheduled.ToString("dd.MM") | @r.Scheduled.ToString("HH:mm")</h3>
	<div class="request-horizontal">
		<img src="images/abonent.png" />
		<p>@a.LastName @a.FirstName @a.MiddleName</p>
	</div>
	<div class="request-horizontal">
		<img src="images/problem.png" />
		<p>@r.Type</p>
	</div>
	<div class="request-description">
		<h4>Описание проблемы</h4>
		<p>@r.Description</p>
	</div>
</div>

@code {
	[Parameter] public bool isVisible { get; set; }
	[Parameter] public EventCallback isVisibleChanged { get; set; }
	[Parameter] public Request r { get; set; }
	[Parameter] public Abonent a { get; set; }


	public void Close() => isVisibleChanged.InvokeAsync();
}