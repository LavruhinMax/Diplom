<style>
    .ok-popup {
    position: fixed;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    height: max-content;
    width: 400px;
    background-color: white;
    box-shadow: 0 0 2px rgba(0, 0, 0, 0.5);
    z-index: 1000
    }

    .ok-popup p {
    margin: 20px;
    font-size: 20px;
    font-weight: 600
    }

    .ok-cnt {
    display: flex;
    width: 100%;
    background-color: lightgray;
    padding: 10px 0;
    align-items: center;
    justify-content: flex-end;
    }

    .ok-cnt button {
    margin: 0 20px 0 0;
    padding: 5px 20px;
    font-weight: 600;
    color: white;
    transition: 0.2s;
    background-color: red;
    border: 1px solid red;
    cursor: pointer
    }

    .ok-cnt button:hover {
    background-color: firebrick;
    border: 1px solid firebrick
    }

    .close {
    position: absolute;
    top: 10px;
    right: 10px;
    height: 24px;
    width: 24px;
    cursor: pointer
    }

    @@media (max-width: 768px) {
    .ok-popup {
    width: 90%
    }
    }
</style>

<div style="display: @(isVisible ? "flex" : "none")" class="ok-popup">
    <p>@message</p>
    <div class="ok-cnt">
        <button @onclick="Close">Ок</button>
    </div>
    <img class="close" src="images/close.png" @onclick="Close"/>
</div>

@code {
    [Parameter] public bool isVisible { get; set; }
    [Parameter] public string message { get; set; }
    [Parameter] public EventCallback isVisibleChanged { get; set; }

    public void Close()
    {
        isVisibleChanged.InvokeAsync();
    }
}
